#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <interfaces/hid-trackball.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            display-name = "0";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R         &kp T                                          &kp SCROLLLOCK             &kp Y                  &kp U            &kp I          &kp O    &kp P     &kp MINUS
&kp ESCAPE  &kp A  &kp S  &kp D      &kp F         &kp G                               &mkp LCLK  &caps_word      &mkp RCLK  &kp H                  &kp J            &kp K          &kp L    &kp SEMI  &kp SQT
&kp GRAVE   &kp Z  &kp X  &kp C      &kp V         &kp B                 &kp K_MUTE               &mkp MCLK                  &kp N                  &kp M            &kp COMMA      &kp DOT  &kp FSLH  &kp BACKSLASH
                          &kp LCTRL  &lt 1 DELETE  &mt LEFT_SHIFT ENTER                                                      &mt RIGHT_SHIFT SPACE  &lt 1 BACKSPACE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        L1 {
            bindings = <
&trans  &kp KP_NLCK  &mkp RCLK  &mkp MCLK     &mkp LCLK  &kp SCROLLLOCK                        &rgb_ug RGB_TOG              &trans  &kp N7  &kp N8  &kp N9  &kp N0     &kp MINUS
&trans  &kp LC(A)    &kp LC(C)  &kp UP_ARROW  &kp LC(V)  &kp LC(LS(V))             &bt BT_PRV  &trans           &bt BT_NXT  &trans  &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp LBKT
&trans  &kp LC(Z)    &kp LEFT   &kp DOWN      &kp RIGHT  &kp LC(X)       &trans                &bt BT_CLR                   &trans  &kp N1  &kp N2  &kp N3  &kp FSLH   &kp RBKT
                                &trans        &trans     &trans                                                             &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        colemak {
            bindings = <
&kp TAB                       &kp Q  &kp W  &kp F             &kp P         &kp G                                          &kp SCROLLLOCK             &kp J                  &kp L            &kp U          &kp Y    &kp SEMI  &kp MINUS
&kp ESC                       &kp A  &kp R  &kp S             &kp T         &kp D                               &mkp LCLK  &caps_word      &mkp RCLK  &kp H                  &kp N            &kp E          &kp I    &kp O     &kp APOS
&mt LA(LC(LEFT_SHIFT)) GRAVE  &kp Z  &kp X  &kp C             &kp V         &kp B                 &kp K_MUTE               &mkp MCLK                  &kp K                  &kp M            &kp COMMA      &kp DOT  &kp FSLH  &mt RIGHT_GUI BACKSLASH
                                            &kp LEFT_CONTROL  &lt 3 DELETE  &mt LEFT_SHIFT ENTER                                                      &mt RIGHT_SHIFT SPACE  &lt 3 BACKSPACE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
